@startuml
actor User
participant "CalorieTrackerCLI" as CLI
participant "CalorieTrackerController" as Controller
participant "DailyLog" as DailyLog
participant "FoodEntry" as FoodEntry
participant "Food" as Food

User -> CLI: viewNutritionalSummary()
activate CLI

CLI -> User: prompt for date
User -> CLI: enter date (or use current)
CLI -> Controller: getCurrentDate()
activate Controller
Controller --> CLI: currentDate
deactivate Controller

alt user entered custom date
    CLI -> Controller: setCurrentDate(date)
    activate Controller
    Controller --> CLI: success
    deactivate Controller
end

CLI -> Controller: getCurrentDayLog()
activate Controller
Controller -> DailyLog: getOrCreateLog(date)
activate DailyLog
DailyLog --> Controller: dailyLog
deactivate DailyLog
Controller --> CLI: dailyLog
deactivate Controller

CLI -> Controller: getCurrentDayCalories()
activate Controller
Controller -> DailyLog: getTotalCalories()
activate DailyLog

DailyLog -> DailyLog: entries.stream()
loop for each FoodEntry
    DailyLog -> FoodEntry: getTotalCalories()
    activate FoodEntry
    
    FoodEntry -> Food: getCaloriesPerServing()
    activate Food
    Food --> FoodEntry: caloriesPerServing
    deactivate Food
    
    FoodEntry -> FoodEntry: calculate caloriesPerServing * servings
    FoodEntry --> DailyLog: totalCaloriesForEntry
    deactivate FoodEntry
end

DailyLog -> DailyLog: sum all entry calories
DailyLog --> Controller: totalCalories
deactivate DailyLog

Controller --> CLI: totalCalories
deactivate Controller

CLI -> Controller: getTargetCalories()
activate Controller
Controller --> CLI: targetCalories
deactivate Controller

CLI -> CLI: Calculate and display difference

CLI --> User: display nutritional summary with total calories
deactivate CLI
@enduml